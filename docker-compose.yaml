services:
  database:
    image: "postgres:16-alpine"
    container_name: trello-database
    restart: always
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - volume-db:/var/lib/postgresql/data
    networks:
      - trello-net
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h ${POSTGRES_HOST}"
      interval: 15s
      timeout: 3s
      retries: 10

  api:
    image: "bayareatrello/novo-trello-api:latest"
    container_name: trello-api
    restart: always
    command: 
      - "sh"
      - "-c"
      - "npx prisma migrate deploy && node dist/src/main.js"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    expose:
      - "3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - trello-net
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "curl -f http://localhost:3000/health-check"
      interval: 15s
      timeout: 3s
      retries: 5 

  webui:
    image: "bayareatrello/novo-trello-webui:latest"
    container_name: trello-webui
    restart: always
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    expose:
      - "3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - trello-net

  nginx:
    image: nginx:1.26.3-alpine-slim
    container_name: trello-nginx
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - webui
    networks:
      - trello-net

volumes:
  volume-db:

networks:
  trello-net:
    driver: bridge
